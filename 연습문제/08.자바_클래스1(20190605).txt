
1. 자동차에 대한 클래스 작성하기.

조건1) 속성 - 대리점명은 상수 클래스변수로 선언.
조건2) 속성 - 제조사, 색상, 가격, 모델명은 인스턴스 변수로 선언.
조건3) 기본 생성자를 만들고 아래의 속성값들을 초기화 바람.
      제조사 - "기아", 색상 - "블랙", 이름 - "K7"
      가격 - "사천만원", 대리점명 - "동대구 영업소"
조건4) 모든 속성들을 매개변수로 전달하여 객체를 생성할수있는 생성자 추가.
조건5) 모든 속성 정보들을 출력하는 인스턴스 메쏘드 추가.

2. 자동차 클래스 추가 작업.

조건1) main()에서 기본생성자를 사용하여 객체를 생성하고 모든 속성 정보 출력하기.
조건2) 자동차 클래스에 모델명을 설정하는 인스턴스 메쏘드 추가.
조건3) 자동차 클래스에 가격을 설정하는 인스턴스 메쏘드 추가.
조건4) 자동차 클래스에서 모델명을 가져오는 인스턴스 메쏘드 추가.
조건5) 자동차 클래스에서 가격을 가져오는 인스턴스 메쏘드 추가.
조건6) main()에서 매개변수가 있는 생성자를 사용하여 객체 생성하기.
조건7) 조건1 에서 생성한 객체를 사용하여 모든 속성 정보 출력.
조건8) 조건6 에서 생성한 객체를 사용하여 모든 속성 정보 출력.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

3. 아래의 배열의 값의 합과 평균을 구하는 클래스 작성.

조건1) int arr[] = {20, 34, 22, 14, 36, 23, 67, 25, 99, 88};
조건2) 배열의 합과 평균을 속성으로 설정.
조건3) 배열의 합을 반환하는 인스턴스 메쏘드 추가.
조건4) 배열의 평균을 반환하는 인스턴스 메쏘드 추가.
조건5) main()에서 생성자의 매개변수로 배열 array 전달하여 객체 생성 및 합과 평균 출력.

4. 메쏘드 파트의 11번 문제를 StudendScore 클래스로 설계해보기 바람.

조건1) 각각의 속성과 메쏘드를 스스로 추상화하여 작성 바람.

5. 랜덤하게 50개의 이름을 생성하는 NameData 클래스 작성.

조건1) 아래의 속성들은 기본 생성자에서 초기화.
first[] = {"김", "박", "이", "최", "장"};
mid[] = {"가", "나", "다", "라", "마"};
last[] = {"바", "사", "아", "자", "차"};

조건2) 50개의 풀네임 저장하는 속성 추가.
조건3) 랜덤하게 50개의 풀네임을 만들어 저장하는 메쏘드 추가.
조건4) 50개의 풀네임을 출력하는 메쏘드 추가.
